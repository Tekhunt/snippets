{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  },
  "orig_nbformat": 4,
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3.9.5 64-bit"
  },
  "interpreter": {
   "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "#ATM machine code\n",
    "\n",
    "### Take input from user\n",
    "### enter bank\n",
    "### Select card type\n",
    "### Balance of 10k\n",
    "### How much do you want to withdraw\n",
    "### check balance\n",
    "### enter password\n",
    "### check for card validity\n"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "'Welcome to Zenith Bank Mr Chizzy'"
      ]
     },
     "metadata": {},
     "execution_count": 28
    }
   ],
   "source": [
    "from getpass import getpass\n",
    "name = input('Please type your full name')\n",
    "title = input('Type your title')\n",
    "password = getpass('Please type a 4 digits password')\n",
    "class Atm_operations:\n",
    "    def __init__(self, name, title, password):\n",
    "        self.name = name\n",
    "        self.bank = 'Zenith Bank'\n",
    "        self.title = title\n",
    "        self.password = password\n",
    "    def welcome_message(self):\n",
    "        return f'Welcome to {self.bank} {self.title} {self.name}'\n",
    "\n",
    "    def validate_password(self):\n",
    "        password_validate = getpass('Please type your password')\n",
    "        while password_validate != self.password:\n",
    "            print('You are succesfully logged in')\n",
    "            password = getpass('Please type a correct password')\n",
    "        # pwd = getpass('input your password')\n",
    "        # while len(pwd) == 4 and pwd.isalpha() == False:\n",
    "        #     pwd = getpass('Please input correct password')\n",
    "        #     print('Successfully logged in!')\n",
    "        #     return pwd\n",
    "\n",
    "\n",
    "    \n",
    "\n",
    "tolu = Atm_operations(name, title, password)\n",
    "tolu.welcome_message()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "output_type": "error",
     "ename": "TypeError",
     "evalue": "'str' object is not callable",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-29-53b46a3112e9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtolu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpassword\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m: 'str' object is not callable"
     ]
    }
   ],
   "source": [
    "tolu.validatpassword()\n"
   ]
  }
 ]
}